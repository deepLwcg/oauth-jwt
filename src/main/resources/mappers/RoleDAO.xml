<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yajienet.oauthjwt.dao.RoleDAO">
  <resultMap id="BaseResultMap" type="cn.yajienet.oauthjwt.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="is_enable" jdbcType="BIT" property="isEnable" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, `alias`, is_enable
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.yajienet.oauthjwt.entity.Role" useGeneratedKeys="true">
    insert into role (role_name, `alias`, is_enable
      )
    values (#{roleName,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{isEnable,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.yajienet.oauthjwt.entity.Role" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="alias != null">
        `alias`,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yajienet.oauthjwt.entity.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        `alias` = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yajienet.oauthjwt.entity.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      `alias` = #{alias,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from role
  </select>
  <select id="selectByUserId" parameterType="integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from role
        inner join user_role as ur on  ur.role_id = role.id
        where ur.user_id = #{uid,jdbcType=INTEGER}
  </select>
</mapper>